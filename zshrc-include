# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="ys"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git aws kubectl bazel docker)

#
# Exports
#
export GOPATH=$HOME/Workspace
export PATH="$PATH:$HOME/bin:/usr/sbin:/sbin:/usr/local/go/bin:$GOPATH/bin"
export DOCKER_HOST="unix:///var/run/docker.sock"
# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

#
# Source Files
#
source $ZSH/oh-my-zsh.sh
source <(kops completion zsh)

# The next line updates PATH for the Google Cloud SDK.
source '/usr/local/google-cloud-sdk/path.zsh.inc'
# The next line enables shell command completion for gcloud.
source '/usr/local/google-cloud-sdk/completion.zsh.inc'
source ~/.dotfiles/sh-include

#
# Aliases
#
alias git-rbr="gco master && gf upstream && grb upstream/master && gp"
alias cd-blog='cd $GOPATH/src/github.com/chrislovecnm/chrislovecnm.com'
alias cd-kops='cd $GOPATH/src/k8s.io/kops'
alias kops-test="make bazel-test"
alias grbim="grbi master"
alias k=kubectl
alias blog-rsync="jekyll clean && jekyll build && gsutil -m rsync -a public-read -r _site/ gs://chrislovecnm.com/"
alias kubetest-bazel="bazel build //kubetest/... && cp $GOPATH/src/k8s.io/test-infra/bazel-bin/kubetest/darwin_amd64_pure_stripped/kubetest.runfiles/__main__/kubetest/darwin_amd64_pure_stripped/kubetest $GOPATH/bin"
alias link-check='docker run -v ${PWD}/_site/:/_site 18fgsa/html-proofer /_site --assume-extension --check-html --url-ignore "https://cve.mitre.org*"," https://nvd.nist.gov/*","https://www.linkedin.com*"'


# Enable completions
autoload -U compinit && compinit

if which brew &>/dev/null
then
	[ -w $HOMEBREW_PREFIX/bin/brew ] && \
		[ ! -f $HOMEBREW_PREFIX/share/zsh/site-functions/_brew ] && \
		mkdir -p $HOMEBREW_PREFIX/share/zsh/site-functions &>/dev/null && \
		ln -s $HOMEBREW_PREFIX/Library/Contributions/brew_zsh_completion.zsh \
		$HOMEBREW_PREFIX/share/zsh/site-functions/_brew
	export FPATH="$HOMEBREW_PREFIX/share/zsh/site-functions:$FPATH"
fi


# Enable regex moving
autoload -U zmv

#  Style ZSH output
zstyle ':completion:*:descriptions' format '%U%B%F{red}%d%f%b%u'
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'

# Case insensitive completion
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

# Case insensitive globbing
setopt no_case_glob

# Expand parameters, commands and aritmatic in prompts
setopt prompt_subst

# Colorful prompt with Git and Subversion branch
autoload -U colors && colors

# Don't show duplicate history entires
setopt hist_find_no_dups

# Remove unnecessary blanks from history
setopt hist_reduce_blanks

# Share history between instances
setopt share_history

# Don't hang up background jobs
setopt no_hup

# 
# Functions
#
function docker-ips() {
  docker ps | while read line; do
      if `echo $line | grep -q 'CONTAINER ID'`; then
        echo -e "IP ADDRESS\t$line"
      else
        CID=$(echo $line | awk '{print $1}');
        IP=$(docker inspect -f "{{ .NetworkSettings.IPAddress }}" $CID);
        printf "${IP}\t${line}\n"
      fi
	done;
}


function drcleanup() {
  docker rm -v $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
  docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}

function getMasterIP() {
  CURRENT_CLUSTER=$(kops get cluster | grep -v NAME)
  CLUSTER=$(echo $CURRENT_CLUSTER | awk '{ print $1 }')
  AZ=$(echo $CURRENT_CLUSTER | awk '{ print $3 }')
  REGION=${AZ[1,-2]}
  aws ec2 describe-instances --filter Name="tag-value",Values="master-${AZ}.masters.${CLUSTER}" Name="instance-state-name",Values="running" --region $REGION --query 'Reservations[].Instances[].PublicIpAddress' --output text
  #| jq -r '.Reservations[0].Instances[0].PublicIpAddress'
}

function tailMasterLog() {
  IP=$(getMasterIP)
  echo sshing into $IP
  ssh admin@$IP "tail -f /var/log/daemon.log"
}

function kSystemPO() {
  IP=$(getMasterIP)
  echo sshing into $IP
  ssh admin@$IP "kubectl -n kube-system get po"
}

function find-go-file () {
  find . -name \*.go -type f | grep $1 | grep -v vendor
}

function find-go () {
  find . -name \*.go -type f -exec grep -H $1 {} \; | grep -v vendor;
}

function kops-bazel() {
  cd-kops
  make bazel-build-cli
  rm -f $GOPATH/bin/kops
  cp bazel-bin/cmd/kops/darwin_amd64_stripped/kops $GOPATH/bin/
}

function kops-patch-pr() {
  curl -L https://patch-diff.githubusercontent.com/raw/kubernetes/kops/pull/$1.patch | git apply -v --reject -p1
}

function blog-post() {
  NAME=$1
  DATE_STAMP=$(date +%F)
  POSTS=$GOPATH/src/github.com/chrislovecnm/chrislovecnm.com/_posts
  POST_DATE=$(date +'%F %T %Z')
  POST_TITLE=${1:gs/-/ }
read -d '' HEADER << EOF
---
title: ${POST_TITLE}
description:
header:
date:   ${POST_DATE}
categories:
---

EOF
  echo $HEADER > $POSTS/${DATE_STAMP}-${NAME}.md
}
